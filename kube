#!/bin/bash
#
# kubectl wrapper 0.3
#

KUBECTL=${KUBECTL_EXECUTABLE:-/usr/bin/kubectl}
ME=$(basename $0)

case ${1:-help} in
pod|pods)
	$KUBECTL get pods --all-namespaces \
		| fzf \
			--header-lines=1 \
			--preview-window=up:60% \
			--preview 'kubectl describe pod {2} -n {1} | bat -l attributes --color=always --style=plain' \
		| awk '{split($0,a," "); print a[2],"--namespace",a[1]}'
	;;


dep|deps)
	$KUBECTL get deployments --all-namespaces \
		| fzf \
			--header-lines=1 \
			--preview-window=up:60% \
			--preview 'kubectl describe deployment {2} -n {1} | bat -l attributes --color=always --style=plain' \
		| awk '{split($0,a," "); print a[2],"--namespace",a[1]}'
	;;

maps)
	$KUBECTL get configmaps --all-namespaces \
		| fzf \
			--header-lines=1 \
			--preview-window=up:60% \
			--preview 'kubectl get configmap {2} -n {1} -o yaml | bat -l yaml --color=always --style=plain' \
		| awk '{split($0,a," "); print a[2],"--namespace",a[1]}'
	;;

exec)
	CMD=${2:-/bin/sh}
	cmd $KUBECTL exec --stdin --tty `$0 pod` -- $CMD	
	;;

shell)
	$0 exec /bin/sh
	;;

follow)
	$KUBECTL logs --follow `$0 pod`
	;;

forward)
	$KUBECTL port-forward `$0 pod` $2:${3:-$2}
	;;

#restart)
#    checkUniqueDep $2 DEP NS
#    cmd $KUBECTL --namespace $NS rollout restart deployment $DEP
#    ;;

#scale)
#    cmd $KUBECTL scale deployment `$0 dep` --replicas=$2
#    ;;

copy-secret)
	shift
	if [ "$3" == "" ]; then
		echo "$ME copy-secret <secret> <source namespace> <target namespace>"
		exit 0
	else
		$KUBECTL get secret $1 -n $2 -o yaml \
			| yq eval 'del(.metadata.resourceVersion)' - \
			| yq eval 'del(.metadata.uid)' - \
			| yq eval 'del(.metadata.annotations)' - \
			| yq eval 'del(.metadata.creationTimestamp)' - \
			| yq eval 'del(.metadata.selfLink)' - \
			| yq eval 'del(.metadata.namespace)' - \
			| $KUBECTL apply --namespace=$3 -f -
	fi
	;;

help)
	echo $(basename $ME) \<command\> \<arguments\>
	echo
	echo "Pod commands:"
	echo "  pod                       Returns kubectl pod params"
	echo "  exec  <cmd>               Executes command in pod"
	echo "  shell                     Open shell in pod"
	echo "  follow                    Follows pod log"
	echo "  forward  <p1> [<p2>]      Forwards pod port to local port"
	echo
	echo "Deployment commands:"
	echo "  dep                       Returns kubectl deployment params"
	echo "  deps                      Search deployments"
	echo "  restart                   Rollout restart deployment"
	#echo "  scale <replicas>         Scale deployment"
	echo
	;;

*)
	$KUBECTL "$@"
	;;

esac
